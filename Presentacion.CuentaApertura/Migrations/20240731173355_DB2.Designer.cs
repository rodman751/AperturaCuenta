// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Presentacion.CuentaApertura.Migrations
{
    [DbContext(typeof(DbContext))]
    [Migration("20240731173355_DB2")]
    partial class DB2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Entidades.CuentaApertura.CombinedData", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("DatosDactilaresIdentificacion")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("DireccionMapaId")
                        .HasColumnType("int");

                    b.Property<int?>("InformacionPersonalId")
                        .HasColumnType("int");

                    b.Property<int?>("OTPId")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("DatosDactilaresIdentificacion");

                    b.HasIndex("DireccionMapaId");

                    b.HasIndex("InformacionPersonalId");

                    b.HasIndex("OTPId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("CombinedData");
                });

            modelBuilder.Entity("Entidades.DatosDactilares", b =>
                {
                    b.Property<string>("Identificacion")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Codigo_Dactilar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Identificacion");

                    b.ToTable("DatosDactilares");
                });

            modelBuilder.Entity("Entidades.DireccionMapa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Canton")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Parroquia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Provincia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Referencia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DireccionMapa");
                });

            modelBuilder.Entity("Entidades.InformacionPersonal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("ActividadesEnOtroPais")
                        .HasColumnType("bit");

                    b.Property<string>("CiudadNacimiento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Dependiente")
                        .HasColumnType("bit");

                    b.Property<string>("DetallesActividadesEnOtroPais")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Gastos")
                        .HasColumnType("float");

                    b.Property<double>("Ingresos")
                        .HasColumnType("float");

                    b.Property<bool>("NegocioPropio")
                        .HasColumnType("bit");

                    b.Property<bool>("Ninguno")
                        .HasColumnType("bit");

                    b.Property<string>("NivelDeInstruccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaisNacimiento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Propia")
                        .HasColumnType("bit");

                    b.Property<bool>("PropiaHipotecada")
                        .HasColumnType("bit");

                    b.Property<bool>("VivoConFamiliares")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("InformacionPersonal");
                });

            modelBuilder.Entity("Entidades.OTP", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("OTP");
                });

            modelBuilder.Entity("Entidades.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("Entidades.CuentaApertura.CombinedData", b =>
                {
                    b.HasOne("Entidades.DatosDactilares", "DatosDactilares")
                        .WithMany()
                        .HasForeignKey("DatosDactilaresIdentificacion");

                    b.HasOne("Entidades.DireccionMapa", "DireccionMapa")
                        .WithMany()
                        .HasForeignKey("DireccionMapaId");

                    b.HasOne("Entidades.InformacionPersonal", "InformacionPersonal")
                        .WithMany()
                        .HasForeignKey("InformacionPersonalId");

                    b.HasOne("Entidades.OTP", "OTP")
                        .WithMany()
                        .HasForeignKey("OTPId");

                    b.HasOne("Entidades.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId");

                    b.Navigation("DatosDactilares");

                    b.Navigation("DireccionMapa");

                    b.Navigation("InformacionPersonal");

                    b.Navigation("OTP");

                    b.Navigation("Usuario");
                });
#pragma warning restore 612, 618
        }
    }
}
